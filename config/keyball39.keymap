#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph

    behaviors {
        q_tab: q_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "Q_TAB";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp TAB>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        w_grave: w_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "W_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;
        };

        quote_pct: quote_pct {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE_PCT";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp PERCENT>;
        };

        lbrace_ast: lbrace_ast {
            compatible = "zmk,behavior-tap-dance";
            label = "LBRACE_AST";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp ASTERISK>;
        };

        plus_at: plus_at {
            compatible = "zmk,behavior-tap-dance";
            label = "PLUS_AT";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp AT_SIGN>;
        };

        hold_right_click: hold_right_click {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_RIGHT_CLICK";
            bindings = <&mkp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        questionex: questionex {
            compatible = "zmk,behavior-tap-dance";
            label = "QUESTIONEX";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
        };

        minusExcl: minusExcl {
            compatible = "zmk,behavior-tap-dance";
            label = "MINUSEXCL";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp EXCLAMATION>;
        };

        lbrak_hash: lbrak_hash {
            compatible = "zmk,behavior-tap-dance";
            label = "LBRAK_HASH";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp HASH>;
        };

        pipe_bsls: pipe_bsls {
            compatible = "zmk,behavior-tap-dance";
            label = "PIPE_BSLS";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp BACKSLASH>;
        };

        under_caret: under_caret {
            compatible = "zmk,behavior-tap-dance";
            label = "UNDER_CARET";
            #binding-cells = <0>;
            bindings = <&kp UNDERSCORE>, <&kp CARET>;
        };

        rbrak_dollar: rbrak_dollar {
            compatible = "zmk,behavior-tap-dance";
            label = "RBRAK_DOLLAR";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp DOLLAR>;
        };

        ctrlw_ctrlq: ctrlw_ctrlq {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRLW_CTRLQ";
            #binding-cells = <0>;
            bindings = <&kp LC(W)>, <&kp LC(Q)>;
        };

        p_esc: p_esc {
            compatible = "zmk,behavior-mod-morph";
            label = "P_ESC";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp ESC>;

            mods = <(MOD_RGUI)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&q_tab          &w_grave      &kp E             &kp R         &kp T                                &kp Y                &kp U        &kp I      &kp O              &p_esc
&mt LEFT_ALT A  &mt LSHIFT S  &lt 5 D           &mt LCTRL F   &kp G                                &kp H                &mt LCTRL J  &lt 5 K    &mt RIGHT_SHIFT L  &mt RIGHT_ALT SEMI
&kp Z           &kp X         &kp C             &kp V         &kp B                                &kp N                &kp M        &mkp LCLK  &dot_comma         &kp SLASH
&kp ESCAPE      &kp CAPS      &kp LEFT_CONTROL  &sk LEFT_GUI  &lt 3 SPACE  &kp TAB  &kp BACKSPACE  &mt RIGHT_GUI ENTER                                             &kp GLOBE
            >;
        };

        number {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR  &kp PERCENT                  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp GRAVE   &kp N0                       &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&trans           &trans         &trans        &trans      &trans                       &trans  &trans  &trans  &trans  &trans
&trans           &trans         &trans        &trans      &trans       &trans  &trans  &trans                          &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_SHIFT   &trans       &trans    &trans      &kp GRAVE                    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SINGLE_QUOTE
&kp LSHFT        &trans       &trans    &trans      &kp CAPS                     &kp UNDERSCORE  &kp PLUS       &kp COMMA         &kp PERIOD            &kp BACKSLASH
&trans           &trans       &trans    &trans      &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5                   &kp GRAVE     &pipe_bsls   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &ctrlw_ctrlq
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10                  &minusExcl    &plus_at     &lbrak_hash           &rbrak_dollar          &quote_pct
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                  &under_caret  &questionex  &lbrace_ast           &kp RIGHT_BRACE        &trans
&trans   &trans   &trans   &trans   &trans   &trans  &trans  &trans                                                                  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&none   &none   &none   &none   &none                   &trans  &none   &trans  &trans  &trans
&none   &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&kp N1         &kp N2  &kp N3  &kp N4      &kp N5                      &trans         &trans             &kp UP_ARROW     &trans           &trans
&kp N6         &kp N7  &kp N8  &kp N9      &kp N0                      &kp PAGE_UP    &kp LEFT_ARROW     &kp DOWN_ARROW   &kp RIGHT_ARROW  &trans
&kp LC(LG(Q))  &trans  &trans  &bt BT_NXT  &bt BT_CLR                  &kp PAGE_DOWN  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE       &bootloader
&trans         &trans  &trans  &trans      &trans      &trans  &trans  &trans                                                              &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_NXT
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
