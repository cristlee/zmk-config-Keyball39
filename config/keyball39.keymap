#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph

    behaviors {
        qtab: qtab {
            compatible = "zmk,behavior-mod-morph";
            label = "qtab";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp TAB>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        wgrave: wgrave {
            compatible = "zmk,behavior-mod-morph";
            label = "WGRAVE";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp GRAVE>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        nq: nq {
            compatible = "zmk,behavior-mod-morph";
            label = "NQ";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp Q>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        mw: mw {
            compatible = "zmk,behavior-mod-morph";
            label = "MW";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp W>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        jq: jq {
            compatible = "zmk,behavior-mod-morph";
            label = "JQ";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp Q>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&qtab           &wgrave       &kp E             &kp R         &kp T                                                     &kp Y        &kp U    &kp I      &kp O      &kp P
&kp A           &lt 1 S       &lt 5 D           &lt 2 F       &kp G                                                     &kp H        &lt 2 J  &lt 5 K    &lt 1 L    &kp SEMI
&kp Z           &kp X         &lt 2 C           &kp V         &kp B                                                     &kp N        &kp M    &mkp LCLK  &mkp RCLK  &kp SLASH
&kp LEFT_SHIFT  &kp LEFT_ALT  &mt COMMA PERIOD  &kp LEFT_GUI  &mt LCTRL SPACE  &mt LS(LEFT_COMMAND) TAB  &kp BACKSPACE  &lt 3 ENTER                                 &kp RIGHT_SHIFT
            >;
        };

        number {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  &kp N1  &kp N2  &kp N3     &kp N4      &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0                  &kp N6  &kp N7  &kp N8     &kp N9      &kp N0
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &kp COMMA  &kp PERIOD  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                 &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_SHIFT   &trans       &trans    &trans      &kp GRAVE                    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT
&kp LSHFT        &trans       &trans    &trans      &kp CAPS                     &kp UNDERSCORE  &kp PLUS       &kp COMMA         &kp PERIOD            &kp BACKSLASH
&trans           &trans       &trans    &trans      &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5                   &kp K_MUTE          &kp C_VOL_DN         &kp C_VOL_UP          &kp LG(W)              &kp LG(Q)
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10                  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp ESC
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                  &kp TAB             &kp LS(TAB)          &kp COMMA             &kp PERIOD             &trans
&trans   &trans   &trans   &trans   &trans   &trans  &trans  &trans                                                                                &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2        &kp N3          &kp N4     &kp N5                     &kp N6         &kp N7     &kp N8  &kp N9     &kp N0
&kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT  &mkp LCLK                  &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK
&none           &none         &none           &none      &none                      &kp PAGE_DOWN  &none      &trans  &trans     &trans
&none           &trans        &trans          &trans     &trans     &trans  &trans  &trans                                       &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&kp N1       &kp N2  &kp N3    &kp N4     &kp N5                     &kp N6     &kp N7          &kp N8        &kp N9          &kp N0
&kp LEFT     &kp UP  &kp DOWN  &kp RIGHT  &kp PG_UP                  &kp PG_DN  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT
&bootloader  &trans  &trans    &trans     &trans                     &trans     &trans          &kp COMMA     &kp PERIOD      &trans
&bt BT_NXT   &trans  &trans    &trans     &trans     &trans  &trans  &trans                                                   &bt BT_CLR
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_NXT
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
