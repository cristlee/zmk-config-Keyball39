#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph

    behaviors {
        qtab: qtab {
            compatible = "zmk,behavior-mod-morph";
            label = "qtab";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp TAB>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        wgrave: wgrave {
            compatible = "zmk,behavior-mod-morph";
            label = "WGRAVE";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;
        };

        quotes: quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTES";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };

        ushash: ushash {
            compatible = "zmk,behavior-tap-dance";
            label = "USHASH";
            #binding-cells = <0>;
            bindings = <&kp UNDERSCORE>, <&kp HASH>;
        };

        co_semi: co_semi {
            compatible = "zmk,behavior-tap-dance";
            label = "CO_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;
        };

        togtap: togtap {
            compatible = "zmk,behavior-hold-tap";
            label = "TOGTAP";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        questionex: questionex {
            compatible = "zmk,behavior-tap-dance";
            label = "QUESTIONEX";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
        };

        plusminus: plusminus {
            compatible = "zmk,behavior-tap-dance";
            label = "PLUSMINUS";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;
        };

        equalat: equalat {
            compatible = "zmk,behavior-tap-dance";
            label = "EQUALAT";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp AT_SIGN>;
        };

        slashs: slashs {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASHS";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp PIPE>, <&kp NON_US_BACKSLASH>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&qtab           &wgrave       &kp E         &kp R         &kp T                                    &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A           &kp S         &lt 5 D       &kp F         &kp G                                    &kp H        &kp J  &lt 5 K    &kp L       &co_semi
&kp Z           &kp X         &kp C         &kp V         &kp B                                    &kp N        &kp M  &mkp LCLK  &dot_comma  &mkp RCLK
&sk LEFT_SHIFT  &kp LEFT_ALT  &sk LS(LGUI)  &sk LEFT_GUI  &mt LCTRL SPACE  &kp TAB  &kp BACKSPACE  &lt 3 ENTER                                &sk RIGHT_SHIFT
            >;
        };

        number {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR  &kp PERCENT                  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp GRAVE   &kp N0                       &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&trans           &trans         &trans        &trans      &trans                       &trans  &trans  &trans  &trans  &trans
&trans           &trans         &trans        &trans      &trans       &trans  &trans  &trans                          &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_SHIFT   &trans       &trans    &trans      &kp GRAVE                    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SINGLE_QUOTE
&kp LSHFT        &trans       &trans    &trans      &kp CAPS                     &kp UNDERSCORE  &kp PLUS       &kp COMMA         &kp PERIOD            &kp BACKSLASH
&trans           &trans       &trans    &trans      &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp LG(Q)  &kp LG(W)  &kp F3   &kp F4   &kp F5                   &kp DOLLAR  &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ESC
&kp F6     &kp F7     &kp F8   &kp F9   &kp F10                  &plusminus  &equalat       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &questionex
&kp F11    &kp F12    &kp F13  &kp F14  &kp F15                  &ushash     &quotes        &kp LEFT_BRACE        &kp RIGHT_BRACE        &slashs
&trans     &trans     &trans   &trans   &trans   &trans  &trans  &trans                                                                  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&none   &none   &none   &none   &none                   &trans  &none   &trans  &trans  &trans
&none   &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&kp N1         &kp N2  &kp N3  &kp N4  &kp N5                  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp UP_ARROW    &kp CAPS         &kp K_MUTE
&kp N6         &kp N7  &kp N8  &kp N9  &kp N0                  &kp PAGE_UP        &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LC(LG(Q))  &trans  &trans  &trans  &trans                  &kp PAGE_DOWN      &trans           &trans          &trans           &bootloader
&bt BT_NXT     &trans  &trans  &trans  &trans  &trans  &trans  &trans                                                               &bt BT_CLR
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_NXT
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
