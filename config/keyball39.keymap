#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph

    behaviors {
        q_tab: q_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "Q_TAB";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp TAB>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        w_grave: w_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "W_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI|MOD_LCTL)>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;

            tapping-term-ms = <240>;
        };

        test: test {
            compatible = "zmk,behavior-hold-tap";
            label = "TEST";
            bindings = <&layergui>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        minus_plus: minus_plus {
            compatible = "zmk,behavior-tap-dance";
            label = "MINUS_PLUS";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PLUS>;
        };

        greatless: greatless {
            compatible = "zmk,behavior-tap-dance";
            label = "GREATLESS";
            #binding-cells = <0>;
            bindings = <&kp GREATER_THAN>, <&kp LESS_THAN>;

            tapping-term-ms = <240>;
        };

        pipe_bsls: pipe_bsls {
            compatible = "zmk,behavior-tap-dance";
            label = "PIPE_BSLS";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp BACKSLASH>;
        };

        lockesc: lockesc {
            compatible = "zmk,behavior-tap-dance";
            label = "LOCKESC";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp LC(LG(Q))>;
        };

        leftb: leftb {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFTB";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_BRACKET>,
                <&kp LEFT_BRACE>,
                <&kp LEFT_PARENTHESIS>;

            tapping-term-ms = <240>;
        };

        rightb: rightb {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHTB";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_PARENTHESIS>;

            tapping-term-ms = <240>;
        };

        quotes: quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTES";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };

        slash_question: slash_question {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASH_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QUESTION>;
        };

        esc_q: esc_q {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_Q";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp Q>;

            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        grave_tilde: grave_tilde {
            compatible = "zmk,behavior-tap-dance";
            label = "GRAVE_TILDE";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        under_equal: under_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "UNDER_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp UNDER>, <&kp EQUAL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <16 17 18 19>;
        };
    };

    macros {
        layergui: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 5 &kp LEFT_GUI>, <&macro_pause_for_release>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&q_tab          &w_grave      &kp E           &kp R        &kp T                                                &kp Y        &kp U        &kp I            &kp O              &kp P
&mt LEFT_ALT A  &mt LSHIFT S  &mt LEFT_GUI D  &mt LCTRL F  &kp G                                                &kp H        &mt LCTRL J  &mt RIGHT_GUI K  &mt RIGHT_SHIFT L  &mt RIGHT_ALT SEMI
&kp Z           &kp X         &kp C           &kp V        &kp B                                                &kp N        &kp M        &mkp LCLK        &dot_comma         &slash_question
&mo 6           &kp CAPS      &layergui       &lt 5 TAB    &mt LEFT_GUI SPACE  &kp LS(LEFT_GUI)  &kp BACKSPACE  &lt 3 ENTER                                                   &to 5
            >;
        };

        number {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR  &kp PERCENT                  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp GRAVE   &kp N0                       &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&trans           &trans         &trans        &trans      &trans                       &trans  &trans  &trans  &trans  &trans
&trans           &trans         &trans        &trans      &trans       &trans  &trans  &trans                          &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_SHIFT   &trans       &trans    &trans      &kp GRAVE                    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SINGLE_QUOTE
&kp LSHFT        &trans       &trans    &trans      &kp CAPS                     &kp UNDERSCORE  &kp PLUS       &kp COMMA         &kp PERIOD            &kp BACKSLASH
&trans           &trans       &trans    &trans      &trans       &trans  &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "NS";
            bindings = <
&kp N1        &kp N2  &kp N3  &kp N4          &kp N5                                  &pipe_bsls  &minus_plus  &under_equal  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)
&kp N6        &kp N7  &kp N8  &kp N9          &kp N0                                  &quotes     &leftb       &lockesc      &rightb               &greatless
&grave_tilde  &none   &none   &none           &none                                   &none       &none        &none         &none                 &none
&trans        &trans  &trans  &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_CONTROL  &trans  &trans                                                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&none   &none   &none   &none   &none                   &trans  &none   &trans  &trans  &trans
&none   &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&kp TAB  &kp LS(TAB)  &kp F3    &kp F4   &kp F5                   &kp C_VOLUME_DOWN   &kp C_VOLUME_UP  &kp UP_ARROW    &kp PAGE_UP      &kp PAGE_DOWN
&kp F6   &kp F7       &kp F8    &kp F9   &kp F10                  &kp LG(LEFT_ARROW)  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LG(RIGHT)
&kp F11  &kp F12      &kp CAPS  &kp F14  &kp F15                  &none               &kp F1           &kp F2          &none            &none
&trans   &trans       &trans    &trans   &trans   &trans  &trans  &kp LCTRL                                                             &to 0
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bt BT_NXT
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &bootloader
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
